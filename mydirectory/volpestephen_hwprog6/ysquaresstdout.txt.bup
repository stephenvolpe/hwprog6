UTILS: open the logfile 'ysquareslog.txt'
UTILS: open succeeded for 'ysquareslog.txt'
UTILS: open the input file '../../ysquares.txt'
UTILS: open succeeded for '../../ysquares.txt'
UTILS: open the output file 'adotoutsquares.txt'
UTILS: open succeeded for 'adotoutsquares.txt'


PASS ONE
    0                                           *23 567 9 123 56789 1
    1                                           *ll mmm a sss hhhhh * comment
    2    0  000000000000 1100 1100 1100 1100        LD    IDX       * load ACC with value at IDX
    3    1  000000000001 1100 1100 1100 1100        LD    NN        * load initial n^2 value
    4    2  000000000010 1100 1100 1100 1100        WRT             * write it
    5                                           *
    6    3  000000000011 1100 1100 1100 1100 TOP    LD    NN        * load the initial n^2 value
    7    4  000000000100 1100 1100 1100 1100        ADD   N         * add in N
    8    5  000000000101 1100 1100 1100 1100        ADD   N         * add in N (again)
    9    6  000000000110 1100 1100 1100 1100        ADD   ONE       * add in ONE
   10    7  000000000111 1100 1100 1100 1100        WRT             * write the new value
   11    8  000000001000 1100 1100 1100 1100        STC   NN        * store the new n^2
   12    9  000000001001 1100 1100 1100 1100        LD    N         * load the addend
   13   10  000000001010 1100 1100 1100 1100        ADD   ONE       * increment it
   14   11  000000001011 1100 1100 1100 1100        STC   N         * store it back
   15                                           *
   16   12  000000001100 1100 1100 1100 1100        LD    IDX       * reload ACC with the counter
   17   13  000000001101 1100 1100 1100 1100        ADD   ONE       * increment counter
   18   14  000000001110 1100 1100 1100 1100        STC   IDX       * store this new address at STO
   19   15  000000001111 1100 1100 1100 1100        LD    IDX       * reload ACC with the counter
   20   16  000000010000 1100 1100 1100 1100        BAN   TOP       * loop until done
   21   17  000000010001 1100 1100 1100 1100        STP   ... .....
   22                                           *
   23   18  000000010010 1100 1100 1100 1100 IDX    HEX       -0005 * loop index
   24   19  000000010011 1100 1100 1100 1100 ONE    HEX       +0001 * we need a constant 1
   25   20  000000010100 1100 1100 1100 1100 N      HEX       +0003 * 
   26   21  000000010101 1100 1100 1100 1100 NN     HEX       +0009 *
   27   22  000000010110 1100 1100 1100 1100        END   ... .....

SYMBOL TABLE
    SYM LOC FLAGS
SYM IDX  18
SYM N    20
SYM NN   21
SYM ONE  19
SYM TOP   3


PASS TWO
    0                                           *23 567 9 123 56789 1
    1                                           *ll mmm a sss hhhhh * comment
    2    0  000000000000 1010 0000 0001 0010        LD    IDX       * load ACC with value at IDX
    3    1  000000000001 1010 0000 0001 0101        LD    NN        * load initial n^2 value
    4    2  000000000010 1110 0000 0000 0011        WRT             * write it
    5                                           *
    6    3  000000000011 1010 0000 0001 0101 TOP    LD    NN        * load the initial n^2 value
    7    4  000000000100 1000 0000 0001 0100        ADD   N         * add in N
    8    5  000000000101 1000 0000 0001 0100        ADD   N         * add in N (again)
    9    6  000000000110 1000 0000 0001 0011        ADD   ONE       * add in ONE
   10    7  000000000111 1110 0000 0000 0011        WRT             * write the new value
   11    8  000000001000 0100 0000 0001 0101        STC   NN        * store the new n^2
   12    9  000000001001 1010 0000 0001 0100        LD    N         * load the addend
   13   10  000000001010 1000 0000 0001 0011        ADD   ONE       * increment it
   14   11  000000001011 0100 0000 0001 0100        STC   N         * store it back
   15                                           *
   16   12  000000001100 1010 0000 0001 0010        LD    IDX       * reload ACC with the counter
   17   13  000000001101 1000 0000 0001 0011        ADD   ONE       * increment counter
   18   14  000000001110 0100 0000 0001 0010        STC   IDX       * store this new address at STO
   19   15  000000001111 1010 0000 0001 0010        LD    IDX       * reload ACC with the counter
   20   16  000000010000 0000 0000 0000 0011        BAN   TOP       * loop until done
   21   17  000000010001 1110 0000 0000 0010        STP   ... .....
   22                                           *
   23   18  000000010010 1111 1111 1111 1011 IDX    HEX       -0005 * loop index
   24   19  000000010011 0000 0000 0000 0001 ONE    HEX       +0001 * we need a constant 1
   25   20  000000010100 0000 0000 0000 0011 N      HEX       +0003 * 
   26   21  000000010101 0000 0000 0000 1001 NN     HEX       +0009 *
   27   22  000000010110 0000 0000 1111 0000        END   ... .....

SYMBOL TABLE
    SYM LOC FLAGS
SYM IDX  18
SYM N    20
SYM NN   21
SYM ONE  19
SYM TOP   3


MACHINE CODE
   0 000000000000 1010 0000 0001 0010
   1 000000000001 1010 0000 0001 0101
   2 000000000010 1110 0000 0000 0011
   3 000000000011 1010 0000 0001 0101
   4 000000000100 1000 0000 0001 0100
   5 000000000101 1000 0000 0001 0100
   6 000000000110 1000 0000 0001 0011
   7 000000000111 1110 0000 0000 0011
   8 000000001000 0100 0000 0001 0101
   9 000000001001 1010 0000 0001 0100
  10 000000001010 1000 0000 0001 0011
  11 000000001011 0100 0000 0001 0100
  12 000000001100 1010 0000 0001 0010
  13 000000001101 1000 0000 0001 0011
  14 000000001110 0100 0000 0001 0010
  15 000000001111 1010 0000 0001 0010
  16 000000010000 0000 0000 0000 0011
  17 000000010001 1110 0000 0000 0010
  18 000000010010 1111 1111 1111 1011
  19 000000010011 0000 0000 0000 0001
  20 000000010100 0000 0000 0000 0011
  21 000000010101 0000 0000 0000 1001

UTILS: close the output file
UTILS: the output file was closed
